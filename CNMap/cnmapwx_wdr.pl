#-----------------------------------------------------------------------------
# Perl source generated by wxDesigner from file: cnmapwx.wdr
# Do not modify this file, all changes will be lost!
#-----------------------------------------------------------------------------

use Wx;
use strict;

use Wx qw( wxDefaultSize wxDefaultPosition wxID_OK wxID_CANCEL wxID_YES );
use Wx qw( wxVERTICAL wxHORIZONTAL wxALL wxLEFT wxRIGHT wxTOP wxBOTTOM wxCENTRE wxGROW );
use Wx qw( wxALIGN_RIGHT wxALIGN_BOTTOM wxALIGN_CENTER wxALIGN_CENTER_VERTICAL wxALIGN_CENTER_HORIZONTAL );
use Wx qw( wxRA_SPECIFY_ROWS wxTE_MULTILINE wxTE_READONLY );

# Window functions

use vars qw($ID_RD_ENCODE_SRC); $ID_RD_ENCODE_SRC = 10000;
use vars qw($ID_RD_ENCODE_DST); $ID_RD_ENCODE_DST = 10001;
use vars qw($ID_TEXT_OPTION); $ID_TEXT_OPTION = 10002;
use vars qw($ID_BUT_FILE_SRC); $ID_BUT_FILE_SRC = 10003;
use vars qw($ID_TC_FILE_SRC); $ID_TC_FILE_SRC = 10004;
use vars qw($ID_BUT_FILE_DST); $ID_BUT_FILE_DST = 10005;
use vars qw($ID_TC_FILE_DST); $ID_TC_FILE_DST = 10006;
use vars qw($ID_BUT_CNMAP); $ID_BUT_CNMAP = 10007;
use vars qw($ID_BUT_DIR_SRC); $ID_BUT_DIR_SRC = 10008;
use vars qw($ID_TC_DIR_SRC); $ID_TC_DIR_SRC = 10009;
use vars qw($ID_BUT_DIR_DST); $ID_BUT_DIR_DST = 10010;
use vars qw($ID_TC_DIR_DST); $ID_TC_DIR_DST = 10011;
use vars qw($ID_BUT_CNMAPDIR); $ID_BUT_CNMAPDIR = 10012;
use vars qw($ID_LOG); $ID_LOG = 10013;
use vars qw($ID_BUT_STOP); $ID_BUT_STOP = 10014;
use vars qw($ID_BUT_QUIT); $ID_BUT_QUIT = 10015;

sub MyDlgWdr {
    my( $item0 ) = Wx::BoxSizer->new( wxVERTICAL );
    
    my( $item1 ) = Wx::FlexGridSizer->new( 0, 3, 0, 0 );
    
    my( $item2 ) = Wx::RadioBox->new( $_[0], $main::ID_RD_ENCODE_SRC, "Souce &Encodings", wxDefaultPosition, [300,-1], 
        ["GBK Mixed or Simplified Chinese","Big5 Traditional Chinese","Utf8 Mixed Chinese"] , 6, wxRA_SPECIFY_ROWS );
    $item1->AddWindow( $item2, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item3 ) = Wx::RadioBox->new( $_[0], $main::ID_RD_ENCODE_DST, "Dest En&codings", wxDefaultPosition, [300,-1], 
        ["GB2312 Simplified Chinese","GBK Mixed Chinese","Big5 Traditional Chinese","Utf8-GBK Mixed Chinese","Utf8-GB2312 Simplified Chinese","Utf8-Big5 Traditional Chinese"] , 6, wxRA_SPECIFY_ROWS );
    $item1->AddWindow( $item3, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item4 ) = Wx::StaticText->new( $_[0], $main::ID_TEXT_OPTION, "option: -s2gb", wxDefaultPosition, wxDefaultSize, 0 );
    $item1->AddWindow( $item4, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->AddSpace( 20, 10, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->AddSpace( 20, 10, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->AddSpace( 20, 10, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item5 ) = Wx::BoxSizer->new( wxHORIZONTAL );
    
    my( $item6 ) = Wx::Button->new( $_[0], $main::ID_BUT_FILE_SRC, "SourceFile", wxDefaultPosition, wxDefaultSize, 0 );
    $item5->AddWindow( $item6, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item7 ) = Wx::TextCtrl->new( $_[0], $main::ID_TC_FILE_SRC, "", wxDefaultPosition, [190,-1], 0 );
    $item5->AddWindow( $item7, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->Add( $item5, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item8 ) = Wx::BoxSizer->new( wxHORIZONTAL );
    
    my( $item9 ) = Wx::Button->new( $_[0], $main::ID_BUT_FILE_DST, "DestFile", wxDefaultPosition, wxDefaultSize, 0 );
    $item8->AddWindow( $item9, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item10 ) = Wx::TextCtrl->new( $_[0], $main::ID_TC_FILE_DST, "", wxDefaultPosition, [190,-1], 0 );
    $item8->AddWindow( $item10, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->Add( $item8, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item11 ) = Wx::Button->new( $_[0], $main::ID_BUT_CNMAP, "Transform File", wxDefaultPosition, wxDefaultSize, 0 );
    $item1->AddWindow( $item11, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->AddSpace( 20, 10, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->AddSpace( 20, 10, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->AddSpace( 20, 10, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item12 ) = Wx::BoxSizer->new( wxHORIZONTAL );
    
    my( $item13 ) = Wx::Button->new( $_[0], $main::ID_BUT_DIR_SRC, "SourceDir", wxDefaultPosition, wxDefaultSize, 0 );
    $item12->AddWindow( $item13, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item14 ) = Wx::TextCtrl->new( $_[0], $main::ID_TC_DIR_SRC, "", wxDefaultPosition, [190,-1], 0 );
    $item12->AddWindow( $item14, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->Add( $item12, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item15 ) = Wx::BoxSizer->new( wxHORIZONTAL );
    
    my( $item16 ) = Wx::Button->new( $_[0], $main::ID_BUT_DIR_DST, "DestDir", wxDefaultPosition, wxDefaultSize, 0 );
    $item15->AddWindow( $item16, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item17 ) = Wx::TextCtrl->new( $_[0], $main::ID_TC_DIR_DST, "", wxDefaultPosition, [190,-1], 0 );
    $item15->AddWindow( $item17, 0, wxALIGN_CENTER|wxALL, 5 );

    $item1->Add( $item15, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item18 ) = Wx::Button->new( $_[0], $main::ID_BUT_CNMAPDIR, "Transform Dirs", wxDefaultPosition, wxDefaultSize, 0 );
    $item1->AddWindow( $item18, 0, wxALIGN_CENTER|wxALL, 5 );

    $item0->Add( $item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    my( $item19 ) = Wx::TextCtrl->new( $_[0], $main::ID_LOG, "", wxDefaultPosition, [760,140], wxTE_MULTILINE|wxTE_READONLY );
    $item0->AddWindow( $item19, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item20 ) = Wx::BoxSizer->new( wxHORIZONTAL );
    
    my( $item21 ) = Wx::Button->new( $_[0], $main::ID_BUT_STOP, "Stop Transform", wxDefaultPosition, wxDefaultSize, 0 );
    $item21->Enable( 0 );
    $item20->AddWindow( $item21, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item22 ) = Wx::Button->new( $_[0], $main::ID_BUT_QUIT, "Exit Program", wxDefaultPosition, wxDefaultSize, 0 );
    $item22->SetDefault();
    $item20->AddWindow( $item22, 0, wxALIGN_CENTER|wxALL, 5 );

    $item0->Add( $item20, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $set_size ) = @_ >= 3 ? $_[2] : 1;
    my( $call_fit ) = @_ >= 2 ? $_[1] : 1;
    if( $set_size == 1 ) {
         $_[0]->SetAutoLayout( 1 );
         $_[0]->SetSizer( $item0 );
         
         if( $call_fit == 1 ) {
             $item0->Fit( $_[0] );
             $item0->SetSizeHints( $_[0] );
         }
    }
    
    $item0;
}

# Menu bar functions

# Bitmap functions

use Wx qw( wxNullBitmap wxBITMAP_TYPE_PNG );


# Toolbar functions


# End of generated file
